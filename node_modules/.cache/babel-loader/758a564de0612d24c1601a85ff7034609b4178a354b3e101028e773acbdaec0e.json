{"ast":null,"code":"var _jsxFileName = \"/home/amol/projects/liquid-dts/react/src/components/InventoryReport.js\";\nimport React, { Component, createRef } from 'react';\nimport './report.css';\nimport StaticReport from './StaticReport';\nimport TurnReport from './TurnReport';\nimport Multiselect from 'multiselect-react-dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { ColorRing } from 'react-loader-spinner';\nimport Form from 'react-bootstrap/Form';\nimport Cookies from 'js-cookie';\nimport * as Bootstrap from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUMMARY_DATA_PROPERTIES = {\n  'lab': 'diamond#cert',\n  'shape': 'diamond#shape',\n  'color': 'diamond#color',\n  'clarity': 'diamond#clarity',\n  'carats': 'gem#carats',\n  'milky': 'diamond#milky',\n  'shade': 'diamond#shade',\n  'make': 'diamond#make',\n  'fluor': 'diamond#fluor',\n  'bic': 'diamond#black_in_center',\n  'bis': 'diamond#black_in_side',\n  'wis': 'diamond#white_in_side',\n  'wic': 'diamond#white_in_center'\n};\nclass InventoryReport extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      itemsData: {},\n      options: {},\n      reportSummary: {\n        'Total Price': 0,\n        'Average Price': 0,\n        'Count': 0\n      },\n      DataisLoaded: false,\n      BreakdownDataLoaded: false,\n      showAlert: false,\n      filterHash: {\n        'size': 1,\n        'end_date': '',\n        'start_date': '',\n        'inventory_date': '',\n        'show_mine': true,\n        'show_others': true,\n        'seller_account_id': [],\n        'get_filtered_data': true,\n        'item_filter': {\n          'discrete': {}\n        },\n        'get_only_matching_count': true,\n        'change_breakdown': false,\n        'get_turn': false\n      }\n    };\n    this.initialItemData = /*#__PURE__*/createRef(0);\n    this.initialRankData = /*#__PURE__*/createRef(0);\n    this.can_change_breakdown = false;\n    this.can_get_turn = false;\n    this.new_inventory_date = '';\n    this.state = {\n      ...this.initialState\n    };\n    this.calculateData = this.calculateData.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.generateOptions = this.generateOptions.bind(this);\n    this.captureUrls = this.captureUrls.bind(this);\n    this.serialize = this.serialize.bind(this);\n    this.getBreakdownData = this.getBreakdownData.bind(this);\n    this.getCsvData = this.getCsvData.bind(this);\n    this.handleBreakdownClick = this.handleBreakdownClick.bind(this);\n    this.handleTurnClick = this.handleTurnClick.bind(this);\n    this.handleTurnDateClick = this.handleTurnDateClick.bind(this);\n  }\n  componentDidMount() {\n    this.getBreakdownData();\n    this.calculateData();\n  }\n  getCsvData() {\n    var freshCsvData = [[\"Date\", \"AttrType\", \"Attr\", \"Inv Val\", \"Inv Count\", \"Sale Val\", \"Sale Count\", \"Months to Rotate\", \"Turn\"]];\n    Object.entries(this.state.itemsData).map(_ref => {\n      let [key, option] = _ref;\n      option.map(data => {\n        freshCsvData.push([this.state.filterHash.inventory_date, key, data.name, data.total_amount, data.count, data.sale_total_amount, data.sale_count, data.num_months_to_rotate, data.turn]);\n      });\n    });\n    return freshCsvData;\n  }\n  getBreakdownData() {\n    let accessToken = Cookies.get('access_token');\n    this.captureUrls();\n    let queryParams = this.state.filterHash;\n    fetch(process.env.REACT_APP_API_URL + \"/inventory_report\", {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(queryParams)\n    }).then(response => response.json()).then(response => {\n      this.generateOptions(response);\n      if (Object.values(response).every(element => element.length == 0)) this.setState({\n        showAlert: true\n      });\n      this.setState({\n        itemsData: response,\n        DataisLoaded: true,\n        BreakdownDataLoaded: true\n      });\n      if (queryParams.get_turn) {\n        if (!queryParams.change_breakdown && !this.initialRankData.current) {\n          this.initialRankData.current = response;\n        }\n      } else {\n        if (!queryParams.change_breakdown && !this.initialItemData.current) {\n          this.initialItemData.current = response;\n        }\n      }\n    });\n  }\n  handleBreakdownClick(event) {\n    this.can_change_breakdown = event.target.checked;\n  }\n  handleTurnClick(event) {\n    this.can_get_turn = event.target.checked;\n    this.forceUpdate();\n  }\n  handleTurnDateClick(event) {\n    this.new_inventory_date = event.target.value;\n  }\n  captureUrls() {\n    const queryParams = new URLSearchParams(window.location.search);\n    let sellerIds, startDate, endDate, changeBreakdown, inventoryDate, getTurn;\n    let filterHash = this.state.filterHash;\n    var sellerIdString = queryParams.get('sellerIds');\n    if (sellerIdString) {\n      sellerIds = sellerIdString.split(',');\n      filterHash['seller_account_id'] = sellerIds;\n    }\n    this.setState({\n      filterHash: filterHash\n    });\n  }\n  serialize(obj, prefix) {\n    var str = [],\n      p,\n      m;\n    for (p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (!isNaN(p)) {\n          m = '';\n        } else {\n          m = p;\n        }\n        var k = prefix ? prefix + \"[\" + m + \"]\" : p,\n          v = obj[p];\n        str.push(v !== null && typeof v === \"object\" ? this.serialize(v, k) : encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n      }\n    }\n    return str.join(\"&\");\n  }\n  generateOptions(response) {\n    Object.entries(response).map(_ref2 => {\n      let [key, options] = _ref2;\n      options.map(data => {\n        data['className'] = key;\n      });\n    });\n    this.setState({\n      options: response\n    });\n  }\n  calculateData(event) {\n    let accessToken = Cookies.get('access_token');\n    this.setState({\n      BreakdownDataLoaded: false\n    });\n    let queryParams = this.serialize(this.state.filterHash);\n    fetch(process.env.REACT_APP_API_URL + \"/items?\" + queryParams, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(response => {\n      let reportSummary = this.state.reportSummary;\n      reportSummary['Count'] = response.meta.total;\n      reportSummary['Total Price'] = response.meta.aggregations.total_sum.slice(0, -3);\n      reportSummary['Average Price'] = response.meta.aggregations.average.slice(0, -3);\n      this.setState({\n        reportSummary: reportSummary\n      });\n    });\n\n    // Calculate BreakDown\n    let filterHash = this.state.filterHash;\n    let getBreakdown = false;\n    if (this.can_get_turn) {\n      if (this.new_inventory_date === '') {\n        alert('Please select inventory Date');\n        return 0;\n      } else {\n        if (this.can_change_breakdown) {\n          filterHash.change_breakdown = true;\n          getBreakdown = true;\n        } else {\n          if (this.initialRankData.current) {\n            this.setState({\n              itemsData: this.initialRankData.current,\n              BreakdownDataLoaded: true\n            });\n            getBreakdown = false;\n          } else {\n            filterHash = this.initialState.filterHash;\n            getBreakdown = true;\n          }\n          filterHash.change_breakdown = false;\n        }\n        filterHash.inventory_date = this.new_inventory_date;\n        filterHash.get_turn = true;\n      }\n    } else {\n      filterHash.get_turn = false;\n      filterHash.inventory_date = '';\n      if (this.can_change_breakdown) {\n        filterHash.change_breakdown = true;\n        getBreakdown = true;\n      } else {\n        if (this.initialItemData.current) {\n          this.setState({\n            itemsData: this.initialItemData.current,\n            BreakdownDataLoaded: true\n          });\n          getBreakdown = false;\n        }\n      }\n    }\n    this.setState({\n      filterHash: filterHash\n    });\n    if (getBreakdown) this.getBreakdownData();\n  }\n  onSelect(selectedList, removedItem) {\n    var filterValues = [];\n    var attrName = null;\n    if (selectedList.length == 0) {\n      attrName = SUMMARY_DATA_PROPERTIES[removedItem.className];\n    }\n    Object.entries(selectedList).map(_ref3 => {\n      let [key, option] = _ref3;\n      attrName = SUMMARY_DATA_PROPERTIES[option.className];\n      if (attrName) {\n        if (attrName === \"gem#carats\") {\n          let carat_range = option.key.split('-');\n          filterValues.push({\n            'to': carat_range[0],\n            'from': carat_range[1]\n          });\n        } else {\n          filterValues.push(option.key);\n        }\n      }\n    });\n    let filterHash = this.state.filterHash;\n    filterHash['item_filter']['discrete'][attrName] = filterValues.flat();\n    this.setState({\n      filterHash: filterHash\n    });\n  }\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    const getTurn = this.state.filterHash.get_turn;\n    const showInventoryDateInput = this.can_get_turn;\n    let noRecords = Object.values(this.state.itemsData).every(element => element.length == 0);\n    let showAlert = noRecords && this.state.showAlert;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-3\",\n          children: \" Fetching reports for you.... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(ColorRing, {\n          visible: true,\n          height: \"160\",\n          width: \"160\",\n          ariaLabel: \"blocks-loading\",\n          wrapperStyle: {},\n          wrapperClass: \"blocks-wrapper\",\n          colors: ['#00319f', '#2e56b1', '#5c7bc2', '#8aa1d3', '#b2c1e2']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://app.liquid.diamonds/assets/LD_logo_only_square_long_dark_bg-e523d23a73890beed782b6e9596ba2ba.png\",\n          alt: \"LD logo\",\n          width: \"70px\",\n          height: \"70px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-start border-secondary\",\n      style: {\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-3\",\n          children: \"Inventory Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), showAlert ? /*#__PURE__*/_jsxDEV(Bootstrap.Alert, {\n        variant: \"warning\",\n        onClose: () => this.setState({\n          showAlert: false\n        }),\n        dismissible: true,\n        style: {\n          width: \"80%\",\n          marginLeft: '10%'\n        },\n        children: [\"Oops, we couldn\\u2019t find any data. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 44\n        }, this), \"Please try with different some filters or params.\"]\n      }, 'warning', true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 22\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-left col-sm-3\",\n        style: {\n          margin: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: \"true\",\n              type: \"switch\",\n              label: \"Change BreakDown\",\n              name: \"change_breakdown\",\n              value: this.state.filterHash.change_breakdown,\n              onChange: this.handleBreakdownClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-start border-secondary\",\n        style: {\n          margin: '10px'\n        },\n        children: Object.entries(this.state.options).map(_ref4 => {\n          let [key, options] = _ref4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\",\n            style: {\n              padding: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Multiselect, {\n              optionLabel: \"Select \" + key,\n              onSelect: this.onSelect,\n              onRemove: this.onSelect,\n              className: key,\n              options: options,\n              displayValue: \"name\",\n              placeholder: \"Select \" + key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: this.calculateData,\n          children: \"Apply Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), getTurn ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(BiDownload, {\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 36\n          }, this), \"Download Report\", /*#__PURE__*/_jsxDEV(CSVLink, {\n            data: this.getCsvData(),\n            className: \"hidden\",\n            filename: \"Inventory_Turn_Report_\" + this.state.filterHash.inventory_date + \".csv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row border-secondary each-summary\",\n        children: Object.entries(this.state.reportSummary).map(_ref5 => {\n          let [key, value] = _ref5;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3 alert alert-info each-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"breakdown\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3\",\n          children: \"BreakDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), getTurn ? /*#__PURE__*/_jsxDEV(TurnReport, {\n        items: this.state.itemsData,\n        DataisLoaded: this.state.BreakdownDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(StaticReport, {\n        items: this.state.itemsData,\n        DataisLoaded: this.state.BreakdownDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default InventoryReport;","map":{"version":3,"names":["React","Component","createRef","StaticReport","TurnReport","Multiselect","Button","CSVLink","CSVDownload","BiDownload","ColorRing","Form","Cookies","Bootstrap","SUMMARY_DATA_PROPERTIES","InventoryReport","constructor","props","initialState","itemsData","options","reportSummary","DataisLoaded","BreakdownDataLoaded","showAlert","filterHash","initialItemData","initialRankData","can_change_breakdown","can_get_turn","new_inventory_date","state","calculateData","bind","onSelect","generateOptions","captureUrls","serialize","getBreakdownData","getCsvData","handleBreakdownClick","handleTurnClick","handleTurnDateClick","componentDidMount","freshCsvData","Object","entries","map","key","option","data","push","inventory_date","name","total_amount","count","sale_total_amount","sale_count","num_months_to_rotate","turn","accessToken","get","queryParams","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","response","json","values","every","element","length","setState","get_turn","change_breakdown","current","event","target","checked","forceUpdate","value","URLSearchParams","window","location","search","sellerIds","startDate","endDate","changeBreakdown","inventoryDate","getTurn","sellerIdString","split","obj","prefix","str","p","m","hasOwnProperty","isNaN","k","v","encodeURIComponent","join","meta","total","aggregations","total_sum","slice","average","getBreakdown","alert","selectedList","removedItem","filterValues","attrName","className","carat_range","flat","render","items","showInventoryDateInput","noRecords","margin","width","marginLeft","padding"],"sources":["/home/amol/projects/liquid-dts/react/src/components/InventoryReport.js"],"sourcesContent":["import React, {Component, createRef} from 'react'\nimport './report.css'\nimport StaticReport from './StaticReport';\nimport TurnReport from './TurnReport';\nimport Multiselect from 'multiselect-react-dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { ColorRing } from  'react-loader-spinner'\nimport Form from 'react-bootstrap/Form';\nimport Cookies from 'js-cookie';\nimport * as Bootstrap from 'react-bootstrap';\n\n\nconst SUMMARY_DATA_PROPERTIES = {'lab':'diamond#cert','shape': 'diamond#shape','color': 'diamond#color','clarity': 'diamond#clarity','carats': 'gem#carats','milky': 'diamond#milky','shade': 'diamond#shade','make': 'diamond#make','fluor': 'diamond#fluor','bic': 'diamond#black_in_center','bis': 'diamond#black_in_side','wis': 'diamond#white_in_side','wic': 'diamond#white_in_center'}\n\nclass InventoryReport extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      itemsData: {},\n      options: {},\n      reportSummary: {'Total Price': 0, 'Average Price': 0, 'Count': 0},\n      DataisLoaded: false,\n      BreakdownDataLoaded: false,\n      showAlert: false,\n      filterHash: {\n        'size'                    : 1,\n        'end_date'                : '',\n        'start_date'              : '',\n        'inventory_date'          : '',\n        'show_mine'               : true,\n        'show_others'             : true,\n        'seller_account_id'       : [],\n        'get_filtered_data'       : true,\n        'item_filter'             : {'discrete': {}},\n        'get_only_matching_count' : true,\n        'change_breakdown'        : false,\n        'get_turn'                : false,\n      }\n    }\n    this.initialItemData = createRef(0);\n    this.initialRankData = createRef(0);\n    this.can_change_breakdown = false\n    this.can_get_turn = false;\n    this.new_inventory_date = '';\n\n    this.state = {...this.initialState };\n\n    this.calculateData = this.calculateData.bind(this)\n    this.onSelect = this.onSelect.bind(this)\n    this.generateOptions = this.generateOptions.bind(this)\n    this.captureUrls = this.captureUrls.bind(this)\n    this.serialize = this.serialize.bind(this)\n    this.getBreakdownData = this.getBreakdownData.bind(this)\n    this.getCsvData = this.getCsvData.bind(this)\n    this.handleBreakdownClick = this.handleBreakdownClick.bind(this)\n    this.handleTurnClick = this.handleTurnClick.bind(this)\n    this.handleTurnDateClick = this.handleTurnDateClick.bind(this)\n  }\n\n  componentDidMount() {\n    this.getBreakdownData();\n    this.calculateData();\n  }\n\n  getCsvData(){\n    var freshCsvData =  [[\"Date\", \"AttrType\", \"Attr\", \"Inv Val\", \"Inv Count\", \"Sale Val\", \"Sale Count\", \"Months to Rotate\", \"Turn\"]]\n    Object.entries(this.state.itemsData).map(([key, option]) => {\n      option.map(data=>{\n        freshCsvData.push([this.state.filterHash.inventory_date, key, data.name, data.total_amount, data.count, data.sale_total_amount, data.sale_count, data.num_months_to_rotate, data.turn])\n      })\n    })\n    return freshCsvData\n  }\n\n  getBreakdownData() {\n    let accessToken = Cookies.get('access_token')\n    this.captureUrls()\n    let queryParams = this.state.filterHash\n    fetch(process.env.REACT_APP_API_URL + \"/inventory_report\", {method: 'POST', headers: {'Authorization': 'Bearer '+ accessToken, 'Content-Type': 'application/json'}, body: JSON.stringify(queryParams)})\n      .then(response => response.json())\n      .then((response) => {\n        this.generateOptions(response)\n        if(Object.values(response).every(element => element.length == 0))\n          this.setState({showAlert: true});\n        this.setState({\n          itemsData: response,\n          DataisLoaded: true,\n          BreakdownDataLoaded: true,\n          });\n        if (queryParams.get_turn){\n          if (!queryParams.change_breakdown && !this.initialRankData.current){\n            this.initialRankData.current = response;\n          }\n        }\n        else{\n          if (!queryParams.change_breakdown && !this.initialItemData.current){\n            this.initialItemData.current = response;\n          }\n        }\n      })\n    }\n\n  handleBreakdownClick(event){\n    this.can_change_breakdown = event.target.checked\n  }\n  handleTurnClick(event){\n    this.can_get_turn = event.target.checked\n    this.forceUpdate()\n  }\n  handleTurnDateClick(event){\n    this.new_inventory_date = event.target.value\n  }\n\n  captureUrls(){\n    const queryParams = new URLSearchParams(window.location.search);\n    let sellerIds, startDate, endDate, changeBreakdown, inventoryDate, getTurn\n    let filterHash  = this.state.filterHash\n    var sellerIdString = queryParams.get('sellerIds')\n    if (sellerIdString){\n      sellerIds = sellerIdString.split(',');\n      filterHash['seller_account_id'] = sellerIds\n    }\n    this.setState({\n      filterHash: filterHash\n    })\n  }\n\n  serialize(obj, prefix) {\n    var str = [],\n    p,m;\n    for (p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (!isNaN(p)){\n          m=''\n        }else{\n          m=p\n        }\n        var k = prefix ? prefix + \"[\"+m+\"]\" : p,\n          v = obj[p];\n        str.push((v !== null && typeof v === \"object\") ?\n          this.serialize(v, k) :\n          encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n      }\n    }\n    return str.join(\"&\");\n  }\n\n  generateOptions(response){\n    Object.entries(response).map(([key, options]) => {\n      options.map(data=>{\n        data['className'] = key\n      })\n    })\n    this.setState({\n      options: response\n    })\n  }\n\n  calculateData(event){\n    let accessToken = Cookies.get('access_token')\n    this.setState({BreakdownDataLoaded: false})\n    let queryParams = this.serialize(this.state.filterHash)\n    fetch(process.env.REACT_APP_API_URL + \"/items?\"+ queryParams, {method: 'GET', headers: {'Authorization': 'Bearer '+ accessToken }})\n      .then(response => response.json())\n      .then((response) => {\n        let reportSummary = this.state.reportSummary\n        reportSummary['Count'] = response.meta.total\n        reportSummary['Total Price'] = response.meta.aggregations.total_sum.slice(0,-3)\n        reportSummary['Average Price'] = response.meta.aggregations.average.slice(0,-3)\n        this.setState({\n          reportSummary: reportSummary\n        });\n      })\n\n    // Calculate BreakDown\n    let filterHash  = this.state.filterHash\n    let getBreakdown = false\n\n    if(this.can_get_turn){\n      if (this.new_inventory_date === '')\n      {\n        alert('Please select inventory Date')\n        return(0)\n      }\n      else{\n        if(this.can_change_breakdown){\n          filterHash.change_breakdown = true\n          getBreakdown = true\n        }\n        else{\n          if(this.initialRankData.current){\n            this.setState({itemsData: this.initialRankData.current, BreakdownDataLoaded: true})\n            getBreakdown = false\n          }\n          else{\n            filterHash = this.initialState.filterHash\n            getBreakdown = true\n          }\n          filterHash.change_breakdown = false\n        }\n        filterHash.inventory_date = this.new_inventory_date\n        filterHash.get_turn = true\n      }\n    }\n    else{\n      filterHash.get_turn = false\n      filterHash.inventory_date = ''\n      if(this.can_change_breakdown){\n        filterHash.change_breakdown = true\n        getBreakdown = true\n      }\n      else{\n        if(this.initialItemData.current){\n          this.setState({itemsData: this.initialItemData.current, BreakdownDataLoaded: true})\n          getBreakdown = false\n        }\n      }\n    }\n    this.setState({filterHash: filterHash})\n\n    if (getBreakdown)\n      this.getBreakdownData()\n  }\n\n\n  onSelect(selectedList, removedItem) {\n    var filterValues = []\n    var attrName = null\n    if (selectedList.length == 0 ){\n      attrName = SUMMARY_DATA_PROPERTIES[removedItem.className]\n    }  \n    Object.entries(selectedList).map(([key, option]) => {\n      attrName = SUMMARY_DATA_PROPERTIES[option.className]\n      if (attrName) {\n        if (attrName === \"gem#carats\"){\n          let carat_range = option.key.split('-')\n          filterValues.push({'to':carat_range[0], 'from':carat_range[1]})\n        }\n        else{\n          filterValues.push(option.key)\n        }\n      }\n    })\n    let filterHash = this.state.filterHash\n    filterHash['item_filter']['discrete'][attrName] = filterValues.flat()\n    this.setState({\n      filterHash: filterHash\n    })\n  }\n\n  render(){\n    const { DataisLoaded, items } = this.state;\n    const getTurn  = (this.state.filterHash.get_turn)\n    const showInventoryDateInput = this.can_get_turn;\n    let noRecords = Object.values(this.state.itemsData).every(element => element.length == 0)\n    let showAlert = noRecords && this.state.showAlert\n\n    if (!DataisLoaded)\n      return(\n        <div className='container_row'>\n          <div>\n            <h1 className=\"mb-3\"> Fetching reports for you.... </h1>\n          </div>\n          <div className='loader'>\n            <ColorRing\n              visible={true}\n              height=\"160\"\n              width=\"160\"\n              ariaLabel=\"blocks-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"blocks-wrapper\"\n              colors={['#00319f', '#2e56b1', '#5c7bc2', '#8aa1d3', '#b2c1e2']}\n              />\n            </div>\n            <div className='logo'>\n              <img src=\"https://app.liquid.diamonds/assets/LD_logo_only_square_long_dark_bg-e523d23a73890beed782b6e9596ba2ba.png\" alt='LD logo' width='70px' height='70px'></img>\n          </div>\n        </div>)\n\n    return (\n      <div className=\"row justify-content-start border-secondary\" style={{margin:'10px'}}>\n        <div className=\"p-5 text-center\">\n          <h1 className=\"mb-3\">Inventory Report</h1>\n        </div>\n\n        {showAlert ? <Bootstrap.Alert key='warning' variant='warning' onClose={() => this.setState({showAlert: false})}  dismissible style={{width: \"80%\", marginLeft: '10%'}}>\n          Oops, we couldn’t find any data. <br/>Please try with different some filters or params.\n        </Bootstrap.Alert>: null}\n\n        <div className=\"row text-left col-sm-3\" style={{margin:'10px'}}>\n          <Form>\n            <Form.Group className=\"mb-3\">  \n              <Form.Check \n                inline='true'\n                type='switch'\n                label='Change BreakDown'\n                name='change_breakdown'\n                value = {this.state.filterHash.change_breakdown}\n                onChange={this.handleBreakdownClick}/>\n              {/*<Form.Check \n                inline='true'\n                type=\"switch\"\n                label=\"Get Turn Data\"\n                name=\"get_turn\"\n                value = {this.state.filterHash.get_turn}\n                onChange={this.handleTurnClick}/>\n              {showInventoryDateInput ? <Form.Control  \n                size='lg' \n                type='date'\n                label='Inventory Date'\n                name='new_inventory_date'\n                value = {this.new_inventory_date.current}\n                onChange={this.handleTurnDateClick}\n                placeholder='Inventory Date'/> : <></>}*/}\n              </Form.Group>\n          </Form>\n        </div>\n        <div className=\"row justify-content-start border-secondary\" style={{margin:'10px'}}>\n          {Object.entries(this.state.options).map(([key, options]) => {\n            return (\n              <div className=\"col-sm-3\" style={{padding:'10px'}}>\n                <Multiselect\n                  optionLabel={\"Select \"+key}\n                  onSelect={this.onSelect}\n                  onRemove={this.onSelect}\n                  className={key}\n                  options={options}\n                  displayValue='name'\n                  placeholder={\"Select \"+key}\n                  />\n              </div>\n            )\n          })}\n        </div>\n\n        <div className=\"action_buttons\">\n          <Button variant=\"info\" onClick={this.calculateData}>Apply Filters</Button>\n          {getTurn ? (\n            <Button variant=\"info\"><BiDownload size={30}/>Download Report\n              <CSVLink data={this.getCsvData()} className='hidden' filename={\"Inventory_Turn_Report_\"+this.state.filterHash.inventory_date+\".csv\"}></CSVLink>\n            </Button>) : <p></p> }\n          <hr></hr>\n        </div>\n        <br></br>\n        <div className=\"row border-secondary each-summary\" >\n            {Object.entries(this.state.reportSummary).map(([key, value]) => {\n              return(\n                <div className='col-sm-3 alert alert-info each-summary'>\n                  <h5>{key}:</h5>\n                  <h5>{value}</h5>\n                </div>\n              )\n            })}\n        </div>\n\n        <br></br>\n        <div className=\"breakdown\">\n          <h2 className=\"mb-3\">BreakDown</h2>\n        </div>\n        {getTurn ? (<TurnReport items={this.state.itemsData} DataisLoaded={this.state.BreakdownDataLoaded}/>) : (<StaticReport items={this.state.itemsData} DataisLoaded={this.state.BreakdownDataLoaded}/>)}\n      </div>\n      )\n  }\n}\nexport default InventoryReport\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}